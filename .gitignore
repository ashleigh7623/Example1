SET set_date = '2025-02-23';

--Change to your tmp table
SET id_store_list = 'pdb2.DAT_WRKSPCE.TMP_AD_STORE_ID_LIST';



WITH cte1 as (

     Select

        dfs.loc as store_number_ent
        ,mst.store_number_aap
        ,mst.store_number_cq

        ,mst.store_type
        ,mst.owner_type
        ,mst.servicing_rdc
        ,mst.servicing_pdc
        
        ,dfs.item as obj_id_number_ent
        ,msk.obj_id_number_aap

        ,msk.item_status
        ,msk.mpog_description
        ,msk.mpog_id
        ,msk.merch_bpg
        ,msk.merch_dept
        ,msk.merch_class
        ,msk.merch_subclass
                
        ,cast(dfs.u_start_date as date) as scpo_start_date
        ,cast(dfs.u_end_date as date) as scpo_end_date
       
        ,case 
            when dfs.u_start_date >= current_date() then 'FUTURE'
            when dfs.u_start_date <= current_date() and dfs.u_end_date >= current_date() then 'CURRENT'
            when dfs.u_end_date = '1974-01-01' then 'NONE'
            when dfs.u_end_date <= current_date() then 'PAST'
         end as eligibility_type
        
    From pdb1.db3.sku dfs

    Left Join pdb2.db1.vw_master_sku msk on
        msk.obj_id_number_ent = dfs.item

    Left Join pdb2.db1.vw_master_store mst on
        mst.store_number_ent = dfs.loc
        
    Where
        (dfs.loc like ('10%') or dfs.loc like ('80%')) -- FILTERS TO STORES ONLY



),

cte2 as (

    Select

        dfs.loc as dc_number_ent
        ,byd.legacy_aap_dc_number as dc_number_aap
        ,dc.loctn_abbrvtn as dc_abbrv
        
        ,dfs.item as obj_id_number_ent
        ,try_to_number(dfs.item) as obj_id_number_aap

        ,case 
            when scf.sku is not null and date(scf.activation_timestamp) <= current_date() then 'Y'
            when scf.sku is not null and date(scf.activation_timestamp) >= current_date() then 'F'           
            else 'N' 
         end as intrepid_converted_flag
        
        ,itm.u_item_status as df_item_status
        ,t5.item_stts as it_item_status

        ,t5.mpog_desc as intrepid_mpog
        ,sd.mpog_description as dat_mpog
        ,sd.mpog_id as dat_mpog_id

        ,sbpg.merchandise_group_desc as merch_bpg
        ,sbpg.merchandise_department_desc as merch_dept
        ,sbpg.merchandise_class_desc as merch_class
        ,sbpg.merchandise_subclass_desc as merch_subclass
        
        ,cast(dfs.u_start_date as date) as scpo_start_date
        ,cast(dfs.u_end_date as date) as scpo_end_date
        --,cast(dfs.efctv_strt_dt as date) as efctv_start_date
        --,cast(dfs.efctv_end_dt as date) as efctv_end_date

        ,case 
            when dfs.u_start_date >= current_date() then 'FUTURE'
            when dfs.u_start_date <= current_date() and dfs.u_end_date >= current_date() then 'CURRENT'
            when dfs.u_end_date <= current_date() then 'PAST'
         end as eligibility_type

    From pdb1.db3.sku dfs

    LEFT JOIN pdb1.db3.item itm on
        itm.item = dfs.item

    LEFT JOIN pdb1.db4.table5 t5 on
        t5.sku = dfs.item

    LEFT JOIN pdb2.db5.table6 byd on
        byd.blue_yonder_loc =  dfs.loc

    LEFT JOIN pdb1.db5.table7 dc on
        dc.ent_loctn_nbr = dfs.loc

    LEFT JOIN pdb2.db6.table8 sd on
        lpad(sd.obj_id_number,8,0) = dfs.item

    Left Join pdb2.db6.table9 sbpg on
        lpad(sbpg.obj_id_number,8,0) = dfs.item

    Left Join pdb2.db2.table10 scf on
        lpad(scf.sku,8,0) = dfs.item
        
    Where
        dfs.loc like ('2%') -- FILTERS TO DC LOCATIONS ONLY

    Order By
        dc_number_aap 

),



sku_store_status AS(


SELECT 
    sl.aap_store_number
    ,sl.comp_obj_id_number
    ,dm.is_replenishing as is_eligible
    ,dm.future_start_date
    ,dm.topsku_future_add
    ,dm.topsku_future_remove
    ,dm.store_type_code ---ind, red or jv
    ,ms.store_type ---hub, super, or store
    ,ms.db1_include_assort ---non standard store
    ,ms.loc_status ---closed store
    ,sd.item_status
    ,e.is_enabled ---is exclusion enabled
    ,e.apply_to_hub 
    ,scpo.scpo_start_date as st_eligibility_start_date
    ,scpo.scpo_end_date as st_eligibility_end_date
    ,scpo.eligibility_type  as st_eligibility_type
    ,dc.eligibility_type as dc_eligibility_type
    ,dc.scpo_start_date as dc_eligibility_start_date
    ,dc.scpo_end_date as dc_eligibility_end_date


    ,CASE 
        WHEN r.replenishing_source_identifier IS NULL THEN 'N'
            ELSE 'Y'
                END AS replenishing_flg

    
    

FROM IDENTIFIER($sku_store_list) sl



LEFT JOIN db1.vw_sku_store_detail_merged dm
    on dm.comp_obj_id_number = sl.comp_obj_id_number
    and dm.aap_store_number = sl.aap_store_number

    
LEFT JOIN db1.vw_master_store ms
    on ms.store_number_aap = sl.aap_store_number
    ---###store_number_ent 


LEFT JOIN db2.sku_data sd   
    on sl.comp_obj_id_number = sd.obj_id_number

    
LEFT JOIN db2.SKU_EXCLUSION_DETAIL e
    on e.obj_id_number = sl.comp_obj_id_number
    and e.store_number = sl.aap_store_number

    
LEFT JOIN pdb2.db2.replenishable_store_sku r
    on sl.comp_obj_id_number = r.obj_id_number
    and sl.aap_store_number = r.store_number

    

LEFT JOIN cte1 scpo
    on scpo.obj_id_number_aap = sl.comp_obj_id_number
    and scpo.store_number_aap = sl.aap_store_number

    
LEFT JOIN cte2 dc
    on dc.obj_id_number_aap = sl.comp_obj_id_number
    and dc.dc_number_aap = sl.dc_number

    
)



SELECT 
    aap_store_number
    ,comp_obj_id_number

    ,is_eligible
    ,future_start_date
    ,topsku_future_add
    ,topsku_future_remove
    ,store_type_code ---ind, red or jv
    ,store_type ---hub, super, or store
    ,db1_include_assort ---non standard store
    ,loc_status ---closed store
    ,item_status
    ,is_enabled ---is exclusion enabled
    ,apply_to_hub 
    ,st_eligibility_start_date
    ,st_eligibility_end_date
    ,st_eligibility_type
    --,dc_eligibility_start_date
    --,dc_eligibility_end_date
    ,dc_eligibility_type

    
    ,CASE 
        WHEN loc_status = 'Closed' THEN 'RED'
        WHEN store_type_code IN ('IND') THEN 'RED'
        WHEN db1_include_assort = 'N' THEN 'ORANGE'
    
        WHEN item_status IN (0,3,4,5,6,7,10) THEN 'RED'
        
       
        WHEN is_enabled = 'Y' and store_type = 'STORE' THEN 'RED'
        WHEN is_enabled = 'Y' and apply_to_hub = 'Y' and store_type != 'STORE' THEN 'RED'
        
        WHEN is_eligible = 'Y' THEN 'RED'
        WHEN topsku_future_remove = 'Y' THEN 'YELLOW'
        WHEN topsku_future_add = 'Y' THEN 'YELLOW'
        WHEN replenishing_flg = 'N' THEN 'YELLOW'
        
        
            ELSE 'ADD'
                END AS action
                
    
    ,CASE 
        WHEN loc_status = 'Closed' THEN 'Closed Store'
        WHEN store_type_code IN ('IND') THEN 'IND Store'
        WHEN db1_include_assort = 'N' THEN 'Non-Standard Store - Confirm Intention'
        
        
        WHEN item_status = 0 THEN 'Item Status: Orderable'
        WHEN item_status = 3 THEN 'Item Status: To Be Discontinued - USE WITH CAUTION'
        WHEN item_status = 4 THEN 'Item Status: Discontinued'
        WHEN item_status = 5 THEN 'Item Status: Supersession'
        WHEN item_status = 6 THEN 'Item Status: Substitution'
        WHEN item_status = 7 THEN 'Item Status: Quality'
        WHEN item_status = 10 THEN 'Item Status: Incomplete'

        WHEN is_enabled = 'Y' and store_type = 'STORE' THEN 'Store Exclusion'
        WHEN is_enabled = 'Y' and apply_to_hub = 'Y' and store_type != 'STORE' THEN 'Hub/Super/Market Exclusion'
        
        
        WHEN is_eligible = 'Y' and st_eligibility_type = 'CURRENT' THEN CONCAT('Current Eligiblility: Started ',st_eligibility_start_date)
        WHEN st_eligibility_type = 'FUTURE' and st_eligibility_start_date >= $set_date THEN 'Future Eligiblility: AFTER Start Date'
        WHEN st_eligibility_type = 'FUTURE' and st_eligibility_start_date < $set_date THEN 'Future Eligiblility: BEFORE Start Date'
        
       ---PUT IN BRAT AUDIT ---- WHEN topsku_future_remove = 'Y' THEN 'Future Remove'
        WHEN topsku_future_add = 'Y' and future_start_date >= $set_date THEN 'Future Add: AFTER Start Date' 
        WHEN topsku_future_add = 'Y' and future_start_date < $set_date THEN 'Future Add: BEFORE Start Date' 
        ---IN PLANNED ADJ BUT NOT IN SCPO
        WHEN topsku_future_add = 'Y' and future_start_date IS NULL THEN 'Future Add: No date'

        WHEN dc_eligibility_type NOT IN ('CURRENT','FUTURE') THEN 'DC NOT ELIGIBLE'
        WHEN replenishing_flg = 'N' THEN 'DC Not Replenishing'
        

        
            ELSE 'GOOD'
                    END AS health_check


           
FROM sku_store_status
